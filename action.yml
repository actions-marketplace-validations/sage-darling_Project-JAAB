name: 'Project-JAAB'
description: 'Create a JMP Addin with repository files and optional other repository files.'
inputs:
  token:
    description: 'Security token to use as access to certain repositories. Required for private repositories'
  owner_repo:
    description: 'The repo owner and repo name that has triggered the action.'
    default: ${{github.repository}}
  run_id:
    description: 'The run reference id that triggered the action.'
    default: ${{github.event.release.id}}
  make_meta_file:
    description: 'Boolean. true will make the custom meta data file. false will not. defaults to false.'
    default: false
  final_pub_path:
    description: 'The pathway where the published addin list is located.'
    required: false
    default: '""'
  pub_name:
    description: 'The pathway where the published addin list is located.'
    required: false
    default: 'publishedaddins.jsl'
  addin_id:
    description: 'The addin ID which is how JMP recognizes the addin. Usually in the format com.company.namehere'
    required: true
  addin_name:
    description: 'The addin name'
    required: true
  jmpcust_txt_file:
    description: 'The File name for the file that explains to JMP how to create the menu format. Must exist in the .github/workflows in a specific format (see action README.md)'
    required: true
  author:
    description: 'The author of the addin. Default is empty'
    default: '""'
  external_files:
    description: 'File name that ends with the suffix .ini that exists in the .github/workflows in a specific format (see action README.md) that gives information about other repos to include files from in the addin build.'
    required: false
  tag_suffix:
    description: 'Boolean. The final addin includes the version tag at the end in the addin name. Set to true to include it. Set to false to exclude it. Default is true.'
    default: true
runs:
  using: "composite"
  steps:
    - run: |
        python "${{ github.action_path }}/AddinBuilder.py"
      shell: bash
      env:
        Token: ${{ inputs.token }}
        OwnerRepo: ${{ inputs.owner_repo }}
        RunID: ${{ inputs.run_id }}
        MakeMetaFile: ${{ inputs.make_meta_file }}
        PubPath: ${{ inputs.final_pub_path }}
        PubName: ${{ inputs.pub_name }}
        AddinID: ${{ inputs.addin_id }}
        AddinName: ${{ inputs.addin_name }}
        Author: ${{ inputs.author }}
        ExternalFiles: ${{ inputs.external_files }}
        TagSuffix: ${{ inputs.tag_suffix }}
        JmpCust: ${{ inputs.jmpcust_txt_file }}